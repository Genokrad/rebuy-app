{% comment %}
  Rebuy Widget Block - Simple Start
{% endcomment %}

<!-- Подключаем Tailwind CSS -->
{% comment %} <script src="https://cdn.tailwindcss.com"></script> {% endcomment %}

<!-- Splide.js CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css">

<!-- Splide.js JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>

<style>

  .product__media-wrapper {
    max-width: 50% !important;
  }

  .product__info-wrapper {
    max-width: 50% !important;
  }
  #sellence-widget-content {
    background-color: #f5f5ee;
    padding: 36px;
    border-radius:16px;
    display: flex;
    flex-direction: column;
  }

  /* Стили для слайдера */
  .sellence-products-slider {
    width: 100%;
  }

  .sellence-products-slider .splide__slide {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
  }

  .sellence-products-slider .splide__slide:not(:last-child)::after {
    content: '+';
    position: absolute;
    right: -15px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 20px;
    font-weight: bold;
    color: #666;
    z-index: 10;
  }

  .sellence-pdp-widget-product-image {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .sellence-pdp-widget-product-image img {
    width: 120px;
    height: 120px;
    object-fit: cover;
    border-radius: 8px;
  }

  /* Скрываем стандартные элементы управления Splide */
  .sellence-products-slider .splide__pagination {
    display: none !important;
  }

  .sellence-products-slider .splide__arrows {
    display: none !important;
  }

  .sellence-widget-title {
    font-size: 27px;
    font-weight: 500;
    margin: 0;
    color: #232323;
    line-height: 1;
    margin-bottom: 20px;
  }

  /* Стили для списка товаров */
  .sellence-widget-this-item-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .sellence-widget-item {
    margin: 0;
  }

  .sellence-widget-item-label {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    cursor: pointer;
    padding: 8px 0;
  }

  .sellence-widget-checkbox {
    display: none;
  }

  .sellence-widget-checkmark {
    width: 20px;
    height: 20px;
    background-color: #000;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    margin-top: 2px;
  }

  .sellence-widget-checkmark::after {
    content: '✓';
    color: white;
    font-size: 14px;
    font-weight: bold;
  }

  .sellence-widget-checkbox:not(:checked) + .sellence-widget-checkmark {
    background-color: transparent;
    border: 2px solid #ccc;
  }

  .sellence-widget-checkbox:not(:checked) + .sellence-widget-checkmark::after {
    display: none;
  }

  .sellence-widget-item-content {
    display: flex;
    /* flex-direction: column; */
    gap: 16px;
    flex: 1;
  }

  .sellence-widget-item-name {
    font-size: 14px;
    color: #333;
    text-decoration: underline;
    line-height: 1.3;
  }

  .sellence-widget-item-price {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .sellence-widget-price-new {
    font-size: 14px;
    font-weight: 600;
    color: #e74c3c;
  }

  .sellence-widget-price-old {
    font-size: 14px;
    color: #999;
    text-decoration: line-through;
  }
  
  .sellence-widget-checkbox {
    display: none !important;
  }

  .sellence-widget-add-to-cart {
    padding: 10px 15px;
    width: 100%;
    height: auto;
    text-align: center;
    font-size: 16px;
    border-style: solid;
    border-width: 1px;
    border-color: #000;
    background-color: transparent;
    color: #000;
    font-weight: 500;
    cursor: pointer;
    width: 50%;
    margin-bottom: 20px;
  }

  .rebuy-product-label {
    font-size: 16px;
    font-weight: 500;
    color: #000;
    line-height: 1;
    margin: 0;
    margin-bottom: 16px;
  }

  .sellence-widget-total-price {
    font-size: 15px;
    font-weight: 600;
    margin-left: 16px;
  }

  .sellence-widget-total-price-new {
    font-weight: 400;
    color: red;
  }

  .sellence-widget-total-price-old {
    font-weight: 400;
    color: #8e8e8e;
    text-decoration: line-through;
  }
</style>

<div class="sellence-widget" id="sellence-widget-{{ block.id }}" data-current-marketplace="{{ market.country_code | default: 'US' }}">
  <div id="sellence-widget-content" class="bg-white p-4 rounded-lg border border-gray-200 shadow-sm">
    <h2 class="sellence-widget-title">Buy more at a lower price</h2>

    <!-- Splide.js слайдер -->
    <div class="splide sellence-products-slider" id="products-slider">
      <div class="splide__track">
        <ul class="splide__list" id="products-list">
          <!-- Товары будут добавлены динамически через JavaScript -->
        </ul>
      </div>
    </div>
   
    <p class="sellence-widget-total-price">Total Price:
      <span class="sellence-widget-total-price-new">$395.20</span>
      <span class="sellence-widget-total-price-old">$416.00</span>
    </p>

    <button class="sellence-widget-add-to-cart">Add all</button>

    <strong class="rebuy-product-label">This item:</strong>

    <ul class="sellence-widget-this-item-list" id="items-list">
      <!-- Товары будут добавлены динамически через JavaScript -->
    </ul>
  </div>
</div>

<script>  

  console.log('{{ market.country_code | default: "US" }}');
  (function() {
    const widgetId = '{{ block.settings.widget_id }}';
    const appUrl = '{{ block.settings.app_url }}';
    const currentProductId = '{{ product.id }}';
    const statusElement = document.getElementById('sellence-status-{{ block.id }}');
    const contentElement = document.getElementById('sellence-widget-content-{{ block.id }}');

    // Инициализация Splide.js слайдера
    function initSlider() {
      if (typeof Splide !== 'undefined') {
        new Splide('#products-slider', {
          type: 'slide',
          perPage: 4,
          perMove: 1,
          gap: '20px',
          // padding: '10px',
          arrows: false,
          pagination: false,
          drag: true,
          snap: true,
          breakpoints: {
            768: {
              perPage: 2,
            },
            480: {
              perPage: 1,
            }
          }
        }).mount();
      }
    }

    // Инициализируем слайдер после загрузки DOM
    document.addEventListener('DOMContentLoaded', initSlider);

    async function loadWidget() {
      try {
        const cleanUrl = appUrl.replace(/\/$/, '');
        const apiUrl = cleanUrl + '/api/widget/' + widgetId + '?productId=' + encodeURIComponent(currentProductId);

        const response = await fetch(apiUrl);

        if (!response.ok) {
          throw new Error('HTTP error! status: ' + response.status);
        }

        const data = await response.json();

        const initializeWidget = (widget) => {
          console.log('Widget data:', widget);
          
          // Получаем текущий маркетплейс
          const currentMarketplace = document.getElementById('sellence-widget-{{ block.id }}').dataset.currentMarketplace || 'US';
          console.log('Current marketplace:', currentMarketplace);
          
          // Инициализируем слайдер с товарами
          initializeProductsSlider(widget, currentMarketplace);
          
          // Инициализируем список товаров
          initializeItemsList(widget, currentMarketplace);
          
          // Обновляем общую цену
          updateTotalPrice(widget, currentMarketplace);
        }
        
        // Функция для создания слайдера с товарами
        function initializeProductsSlider(widget, currentMarketplace) {
          const productsList = document.getElementById('products-list');
          if (!productsList || !widget.product?.childProducts) return;
          
          // Очищаем список
          productsList.innerHTML = '';
          
          // Добавляем товары в слайдер
          widget.product.childProducts.forEach((childProduct, index) => {
            const slide = document.createElement('li');
            slide.className = 'splide__slide';
            
            // Получаем цену для текущего маркетплейса
            const inventoryLevel = childProduct.variantDetails?.inventoryLevels?.find(
              level => level.countryCode === currentMarketplace
            ) || childProduct.variantDetails?.inventoryLevels?.[0];
            
            const imageUrl = childProduct.variantDetails?.image?.url || 
                           'https://via.placeholder.com/120x120?text=No+Image';
            
            slide.innerHTML = `
              <div class="sellence-pdp-widget-product-image">
                <img src="${imageUrl}" alt="Product ${index + 1}" width="120" height="120">
              </div>
            `;
            
            productsList.appendChild(slide);
          });
          
          // Переинициализируем слайдер
          if (typeof Splide !== 'undefined') {
            const splideElement = document.querySelector('#products-slider');
            if (splideElement) {
              // Уничтожаем существующий слайдер если есть
              if (splideElement.splide) {
                splideElement.splide.destroy();
              }
              
              // Создаем новый слайдер
              new Splide('#products-slider', {
                type: 'slide',
                perPage: Math.min(4, widget.product.childProducts.length),
                perMove: 1,
                gap: '20px',
                arrows: false,
                pagination: false,
                drag: true,
                snap: true,
                breakpoints: {
                  768: {
                    perPage: Math.min(2, widget.product.childProducts.length),
                  },
                  480: {
                    perPage: 1,
                  }
                }
              }).mount();
            }
          }
        }
        
        // Функция для создания списка товаров
        function initializeItemsList(widget, currentMarketplace) {
          const itemsList = document.getElementById('items-list');
          if (!itemsList || !widget.product?.childProducts) return;
          
          // Очищаем список
          itemsList.innerHTML = '';
          
          // Добавляем товары в список
          widget.product.childProducts.forEach((childProduct, index) => {
            const item = document.createElement('li');
            item.className = 'sellence-widget-item';
            
            // Получаем цену для текущего маркетплейса
            const inventoryLevel = childProduct.variantDetails?.inventoryLevels?.find(
              level => level.countryCode === currentMarketplace
            ) || childProduct.variantDetails?.inventoryLevels?.[0];
            
            const price = inventoryLevel?.price || childProduct.variantDetails?.price || '0';
            const currencyCode = inventoryLevel?.currencyCode || 'USD';
            const compareAtPrice = childProduct.variantDetails?.compareAtPrice;
            
            // Получаем название товара (можно расширить логику)
            const productName = `Product ${index + 1}`; // Заглушка, нужно получать из API
            
            item.innerHTML = `
              <label class="sellence-widget-item-label">
                <input type="checkbox" class="sellence-widget-checkbox" checked>
                <span class="sellence-widget-checkmark"></span>
                <div class="sellence-widget-item-content">
                  <span class="sellence-widget-item-name">${productName}</span>
                  <div class="sellence-widget-item-price">
                    <span class="sellence-widget-price-new">$${price} ${currencyCode}</span>
                    ${compareAtPrice ? `<span class="sellence-widget-price-old">$${compareAtPrice} ${currencyCode}</span>` : ''}
                  </div>
                </div>
              </label>
            `;
            
            itemsList.appendChild(item);
          });
        }
        
        // Функция для обновления общей цены
        function updateTotalPrice(widget, currentMarketplace) {
          const totalPriceNew = document.querySelector('.sellence-widget-total-price-new');
          const totalPriceOld = document.querySelector('.sellence-widget-total-price-old');
          
          if (!totalPriceNew || !widget.product?.childProducts) return;
          
          let totalNew = 0;
          let totalOld = 0;
          
          widget.product.childProducts.forEach(childProduct => {
            const inventoryLevel = childProduct.variantDetails?.inventoryLevels?.find(
              level => level.countryCode === currentMarketplace
            ) || childProduct.variantDetails?.inventoryLevels?.[0];
            
            const price = parseFloat(inventoryLevel?.price || childProduct.variantDetails?.price || '0');
            const compareAtPrice = parseFloat(childProduct.variantDetails?.compareAtPrice || '0');
            
            totalNew += price;
            if (compareAtPrice > 0) {
              totalOld += compareAtPrice;
            }
          });
          
          totalPriceNew.textContent = `$${totalNew.toFixed(2)}`;
          if (totalOld > 0) {
            totalPriceOld.textContent = `$${totalOld.toFixed(2)}`;
            totalPriceOld.style.display = 'inline';
          } else {
            totalPriceOld.style.display = 'none';
          }
        }

        const productPagePlacement = data?.widget?.settings?.placements?.includes('products');

        if (data?.widget?.product?.parentProduct && productPagePlacement) {
          initializeWidget(data.widget);
        }

      } catch (error) {
        console.error('Error loading widget:', error);
        statusElement.innerHTML = '❌ Ошибка: ' + error.message;
        statusElement.className = 'text-red-600 font-medium';
      }
    }

    loadWidget();
  })();
</script>

{% schema %}
{
  "name": "Rebuy Widget",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "widget_id",
      "label": "Widget ID",
      "info": "Enter the Widget ID from your Rebuy app admin panel"
    },
    {
      "type": "text",
      "id": "app_url",
      "label": "App URL",
      "info": "Your app URL from terminal (e.g., https://abc123.cloudflare-tunnel.com)",
      "placeholder": "https://your-tunnel-url.com"
    }
  ]
}
{% endschema %}