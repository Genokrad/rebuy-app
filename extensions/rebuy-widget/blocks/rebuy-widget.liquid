{% comment %}
  Rebuy Widget Block - Simple Start
{% endcomment %}

<!-- Подключаем Tailwind CSS -->
{% comment %} <script src="https://cdn.tailwindcss.com"></script> {% endcomment %}

<div class="sellence-widget" id="sellence-widget-{{ block.id }}">
  <div id="sellence-widget-content" class="bg-white p-4 rounded-lg border border-gray-200 shadow-sm">
    <div class="sellence-progress-bar">
      <h2 class="text-2xl font-bold text-blue-600 mb-2">Привет!!</h2>
      <p id="sellence-status-{{ block.id }}" class="text-gray-600">Загрузка данных...</p>
    </div>
  </div>
</div>

<!-- Убираем старые стили, так как теперь используем Tailwind -->
<style>
  /* Можно оставить только специфичные стили, которые не покрывает Tailwind */
</style>

<script>  
  (function() {
    const widgetId = '{{ block.settings.widget_id }}';
    const appUrl = '{{ block.settings.app_url }}';
    const currentProductId = '{{ product.id }}';
    const statusElement = document.getElementById('sellence-status-{{ block.id }}');
    const contentElement = document.getElementById('sellence-widget-content-{{ block.id }}');

    if (!widgetId) {
      statusElement.innerHTML = '❌ Widget ID не указан в настройках блока';
      statusElement.className = 'text-red-600 font-medium';
      return;
    }

    if (!appUrl) {
      statusElement.innerHTML = '❌ App URL не указан в настройках блока';
      statusElement.className = 'text-red-600 font-medium';
      return;
    }

    async function loadWidget() {
      try {
        statusElement.innerHTML = '⏳ Загружаем данные виджета...';
        statusElement.className = 'text-blue-600 font-medium';

        const cleanUrl = appUrl.replace(/\/$/, '');
        const apiUrl = cleanUrl + '/api/widget/' + widgetId + '?productId=' + encodeURIComponent(currentProductId);

        const response = await fetch(apiUrl);

        if (!response.ok) {
          throw new Error('HTTP error! status: ' + response.status);
        }

        const data = await response.json();

        const initializeWidget = (widget) => {
          console.log(widget);
        }

        const productPagePlacement = data?.widget?.settings?.placements?.includes('products');

        if (data?.widget?.product?.parentProduct && productPagePlacement) {
          initializeWidget(data.widget);
        }

      } catch (error) {
        console.error('Error loading widget:', error);
        statusElement.innerHTML = '❌ Ошибка: ' + error.message;
        statusElement.className = 'text-red-600 font-medium';
      }
    }

    loadWidget();
  })();
</script>

{% schema %}
{
  "name": "Rebuy Widget",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "widget_id",
      "label": "Widget ID",
      "info": "Enter the Widget ID from your Rebuy app admin panel"
    },
    {
      "type": "text",
      "id": "app_url",
      "label": "App URL",
      "info": "Your app URL from terminal (e.g., https://abc123.cloudflare-tunnel.com)",
      "placeholder": "https://your-tunnel-url.com"
    }
  ]
}
{% endschema %}